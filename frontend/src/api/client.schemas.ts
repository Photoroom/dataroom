/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * DataRoom API
 * Store training images at scale.
 * OpenAPI spec version: 1.0.0
 */
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AttributeFieldStringFormat = {
  ...StringFormatEnum,
  ...BlankEnum,
  ...NullEnum,
} as const;
/**
 * @nullable
 */
export type AttributeFieldStringFormat =
  | (typeof AttributeFieldStringFormat)[keyof typeof AttributeFieldStringFormat]
  | null;

export interface AttributeField {
  /**
   * @minLength 1
   * @maxLength 100
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  name: string;
  field_type?: keyof typeof FieldTypeEnum;
  /** @nullable */
  string_format?: AttributeFieldStringFormat;
  /** Is validation for this field enabled? */
  is_enabled?: boolean;
  readonly image_count: number;
}

export enum BlankEnum {
  "" = "",
}
export interface Count {
  count: number;
}

export interface Dataset {
  readonly slug_version: string;
  /** @pattern ^[-a-zA-Z0-9_]+$ */
  readonly slug: string;
  readonly version: number;
  /** @maxLength 100 */
  name: string;
  readonly author: User;
  readonly image_count: number;
  description?: string;
  is_frozen?: boolean;
}

export interface DatasetCreate {
  /**
   * @maxLength 100
   * @pattern ^[-a-zA-Z0-9_]+$
   */
  slug: string;
  readonly version: number;
  /** @maxLength 100 */
  name: string;
  readonly author: User;
  readonly image_count: number;
  description?: string;
  is_frozen?: boolean;
}

export interface DatasetPreviewImage {
  /**
   * @minLength 1
   * @maxLength 512
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  id: string;
  image?: string;
  /** @nullable */
  thumbnail?: string | null;
}

export interface DatasetPreviewImages {
  image_count: number;
  preview_images: DatasetPreviewImage[];
}

export interface DatasetUpdateImages {
  /**
   * @minItems 1
   * @maxItems 1000
   */
  image_ids: string[];
}

export interface DatasetUpdateImagesResponse {
  updated_count: number;
}

/**
 * * `string` - String
 * `number` - Number
 * `integer` - Integer
 * `array` - Array
 * `boolean` - Boolean
 * `null` - Null
 */
export enum FieldTypeEnum {
  string = "string",
  number = "number",
  integer = "integer",
  array = "array",
  boolean = "boolean",
  null = "null",
}
export interface ImageIdsWithTagNames {
  /**
   * @minItems 1
   * @maxItems 1000
   */
  image_ids: string[];
  /**
   * @minItems 1
   * @maxItems 10
   */
  tag_names: string[];
}

export interface ImageLatentCreate {
  /**
   * @minLength 1
   * @maxLength 128
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  latent_type: string;
  file: string;
}

export interface LatentType {
  /**
   * @minLength 1
   * @maxLength 128
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  name: string;
  is_mask?: boolean;
  readonly image_count: number;
}

export enum NullEnum {}
/**
 * @nullable
 */
export type OSImageCocaEmbeddingProperty = OSImageCocaEmbedding | null;

export type OSImageAttributes = { [key: string]: unknown };

/**
 * @nullable
 */
export type OSImageRelatedImages = { [key: string]: string } | null;

export interface OSImage {
  /**
   * @minLength 1
   * @maxLength 512
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  id: string;
  source?: string;
  image?: string;
  image_direct_url?: string;
  date_created?: string;
  date_updated?: string;
  author?: string;
  image_hash?: string;
  /** @nullable */
  width?: number | null;
  /** @nullable */
  height?: number | null;
  /** @nullable */
  short_edge?: number | null;
  /** @nullable */
  pixel_count?: number | null;
  /** @nullable */
  aspect_ratio?: number | null;
  /** @nullable */
  aspect_ratio_fraction?: string | null;
  /** @nullable */
  thumbnail?: string | null;
  /** @nullable */
  thumbnail_direct_url?: string | null;
  /** @nullable */
  thumbnail_error?: boolean | null;
  /** @nullable */
  original_url?: string | null;
  tags?: string[];
  /** @nullable */
  coca_embedding?: OSImageCocaEmbeddingProperty;
  latents?: OSImageLatent[];
  attributes?: OSImageAttributes;
  /** @nullable */
  duplicate_state?: number | null;
  /** @nullable */
  related_images?: OSImageRelatedImages;
  /** @nullable */
  datasets?: string[] | null;
}

export interface OSImageCocaEmbedding {
  /** @nullable */
  vector?: number[] | null;
  /** @nullable */
  author?: string | null;
}

export type OSImageCreateAttributes = { [key: string]: unknown };

/**
 * @nullable
 */
export type OSImageCreateRelatedImages = { [key: string]: string } | null;

export interface OSImageCreate {
  /**
   * @minLength 1
   * @maxLength 512
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  id?: string;
  image?: string;
  image_url?: string;
  source: string;
  attributes?: OSImageCreateAttributes;
  tags?: string[];
  /** @nullable */
  related_images?: OSImageCreateRelatedImages;
  /** @nullable */
  datasets?: string[] | null;
}

export interface OSImageLatent {
  /**
   * @minLength 1
   * @maxLength 128
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  latent_type: string;
  file_direct_url?: string;
  is_mask?: boolean;
}

export interface OSImageSegmentation {
  captions: string[];
  segments: number[][];
}

export type OSImageUpdateAttributes = { [key: string]: unknown };

/**
 * @nullable
 */
export type OSImageUpdateRelatedImages = { [key: string]: string } | null;

export interface OSImageUpdate {
  source?: string;
  attributes?: OSImageUpdateAttributes;
  latents?: ImageLatentCreate[];
  tags?: string[];
  /** @pattern ^\[[\s\d,.\-\+eE]+\]$ */
  coca_embedding?: string;
  /** @nullable */
  related_images?: OSImageUpdateRelatedImages;
  /** @nullable */
  datasets?: string[] | null;
}

export interface PaginatedDatasetList {
  /** @nullable */
  next?: string | null;
  /** @nullable */
  previous?: string | null;
  results: Dataset[];
}

export interface PaginatedOSImage {
  /** @nullable */
  next: string | null;
  results: OSImage[];
}

export interface PaginatedTagList {
  /** @nullable */
  next?: string | null;
  /** @nullable */
  previous?: string | null;
  results: Tag[];
}

export interface PaginatedTokenList {
  /** @nullable */
  next?: string | null;
  /** @nullable */
  previous?: string | null;
  results: Token[];
}

export interface PatchedDataset {
  readonly slug_version?: string;
  /** @pattern ^[-a-zA-Z0-9_]+$ */
  readonly slug?: string;
  readonly version?: number;
  /** @maxLength 100 */
  name?: string;
  readonly author?: User;
  readonly image_count?: number;
  description?: string;
  is_frozen?: boolean;
}

export interface PatchedTag {
  readonly id?: string;
  /**
   * @minLength 1
   * @maxLength 300
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  name?: string;
  description?: string;
  readonly image_count?: number;
}

export interface PatchedToken {
  readonly id?: string;
  readonly key?: string;
  is_readonly?: boolean;
}

export interface Queue {
  total_images: StatsDict;
  images_missing_thumbnail: StatsDict;
  images_missing_coca_embedding: StatsDict;
  images_missing_duplicate_state: StatsDict;
  images_marked_as_duplicates: StatsDict;
  images_marked_for_deletion: StatsDict;
  images_with_disabled_latents: StatsDict;
}

/**
 * @nullable
 */
export type RelatedOSImageImage = OSImage | null;

export interface RelatedOSImage {
  name: string;
  image_id: string;
  /** @nullable */
  image?: RelatedOSImageImage;
}

/**
 * @nullable
 */
export type SimilarOSImageCocaEmbedding = OSImageCocaEmbedding | null;

export type SimilarOSImageAttributes = { [key: string]: unknown };

/**
 * @nullable
 */
export type SimilarOSImageRelatedImages = { [key: string]: string } | null;

export interface SimilarOSImage {
  /**
   * @minLength 1
   * @maxLength 512
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  id: string;
  source?: string;
  image?: string;
  image_direct_url?: string;
  date_created?: string;
  date_updated?: string;
  author?: string;
  image_hash?: string;
  /** @nullable */
  width?: number | null;
  /** @nullable */
  height?: number | null;
  /** @nullable */
  short_edge?: number | null;
  /** @nullable */
  pixel_count?: number | null;
  /** @nullable */
  aspect_ratio?: number | null;
  /** @nullable */
  aspect_ratio_fraction?: string | null;
  /** @nullable */
  thumbnail?: string | null;
  /** @nullable */
  thumbnail_direct_url?: string | null;
  /** @nullable */
  thumbnail_error?: boolean | null;
  /** @nullable */
  original_url?: string | null;
  tags?: string[];
  /** @nullable */
  coca_embedding?: SimilarOSImageCocaEmbedding;
  latents?: OSImageLatent[];
  attributes?: SimilarOSImageAttributes;
  /** @nullable */
  duplicate_state?: number | null;
  /** @nullable */
  related_images?: SimilarOSImageRelatedImages;
  /** @nullable */
  datasets?: string[] | null;
  similarity: number;
}

export interface SimilarToText {
  /**
   * @minLength 1
   * @maxLength 180
   */
  text: string;
  /**
   * @minimum 1
   * @maximum 100
   */
  number: number;
}

export interface SimilarToVector {
  /** @pattern ^\[[\s\d,.\-\+eE]+\]$ */
  vector: string;
  /**
   * @minimum 1
   * @maximum 100
   */
  number: number;
}

export interface StatsDict {
  current: number;
  date_updated: string;
  prev: number;
  prev_date_updated: string;
  change_per_second: number;
  time_left: number;
}

/**
 * * `date-time` - Date-time
 * `time` - Time
 * `date` - Date
 * `duration` - Duration
 * `email` - Email
 * `hostname` - Hostname
 * `ipv4` - IPv4
 * `ipv6` - IPv6
 * `uuid` - UUID
 * `uri` - URI
 */
export enum StringFormatEnum {
  "date-time" = "date-time",
  time = "time",
  date = "date",
  duration = "duration",
  email = "email",
  hostname = "hostname",
  ipv4 = "ipv4",
  ipv6 = "ipv6",
  uuid = "uuid",
  uri = "uri",
}
export interface Tag {
  readonly id: string;
  /**
   * @minLength 1
   * @maxLength 300
   * @pattern ^[a-zA-Z0-9_-]+$
   */
  name: string;
  description?: string;
  readonly image_count: number;
}

export interface TagImagesResponse {
  tags_created: number;
  images_tagged: number;
}

export interface Token {
  readonly id: string;
  readonly key: string;
  is_readonly?: boolean;
}

export interface Totals {
  images: StatsDict;
}

export interface User {
  readonly id: string;
  readonly email: string;
}

export type DatasetsListParams = {
  /**
   * The pagination cursor value.
   */
  cursor?: string;
  /**
   * Number of results to return per page.
   */
  page_size?: number;
  slug?: string;
};

export type ImagesListParams = {
  /**
   * Return all available fields with ?all_fields=true
   */
  all_fields?: boolean;
  aspect_ratio?: number;
  aspect_ratio__gt?: number;
  aspect_ratio__gte?: number;
  aspect_ratio__lt?: number;
  aspect_ratio__lte?: number;
  aspect_ratio_fraction?: string;
  /**
   * Filter images with no aspect ratio fraction.
   */
  aspect_ratio_fraction__empty?: boolean;
  /**
   * Comma-separated list of attr:value pairs to filter by.
   */
  attributes?: string[];
  /**
   * Filter images with no coca embedding.
   */
  coca_embedding__empty?: boolean;
  cursor?: string;
  /**
   * Filter images that have any of these comma-separated list of datasets.
   */
  datasets?: string[];
  /**
   * Filter images that have all of these comma-separated list of datasets.
   */
  datasets__all?: string[];
  /**
   * Filter images with no datasets.
   */
  datasets__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of datasets.
   */
  datasets__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of datasets.
   */
  datasets__ne_all?: string[];
  date_created__gt?: string;
  date_created__gte?: string;
  date_created__lt?: string;
  date_created__lte?: string;
  date_updated__gt?: string;
  date_updated__gte?: string;
  date_updated__lt?: string;
  date_updated__lte?: string;
  duplicate_state?: string;
  /**
   * Exclude fields that are there by default with ?exclude_fields=thumbnail
   */
  exclude_fields?: string;
  /**
   * You can specify the exact fields with ?fields=id,image
   */
  fields?: string;
  /**
   * Filter images that have all of these comma-separated list of attributes.
   */
  has_attributes?: string[];
  /**
   * Filter images that have all of these comma-separated list of latents.
   */
  has_latents?: string[];
  /**
   * Filter images that have all of these comma-separated list of latentmasks.
   */
  has_masks?: string[];
  /**
   * Include fields that are not there by default with ?include_fields=image,thumbnail
   */
  include_fields?: string;
  /**
   * Filter images without any of these comma-separated list of attributes.
   */
  lacks_attributes?: string[];
  /**
   * Filter images without any of these comma-separated list of latents.
   */
  lacks_latents?: string[];
  lacks_masks?: string[];
  /**
   * The number of images to return per page.
   */
  page_size?: number;
  pixel_count?: number;
  pixel_count__gt?: number;
  pixel_count__gte?: number;
  pixel_count__lt?: number;
  pixel_count__lte?: number;
  /**
   * Return specific latents only with ?return_latents=latent_type
   */
  return_latents?: string;
  short_edge?: number;
  short_edge__gt?: number;
  short_edge__gte?: number;
  short_edge__lt?: number;
  short_edge__lte?: number;
  /**
   * Deprecated! Please use sources instead.
   */
  source?: string;
  /**
   * Filter images with no source.
   */
  source__empty?: boolean;
  /**
   * Comma-separated list of sources to filter by.
   */
  sources?: string[];
  /**
   * Comma-separated list of sources to exclude.
   */
  sources__ne?: string[];
  /**
   * Filter images that have any of these comma-separated list of tags.
   */
  tags?: string[];
  /**
   * Filter images that have all of these comma-separated list of tags.
   */
  tags__all?: string[];
  /**
   * Filter images with no tags.
   */
  tags__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of tags.
   */
  tags__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of tags.
   */
  tags__ne_all?: string[];
};

export type ImagesRetrieveParams = {
  /**
   * Return all available fields with ?all_fields=true
   */
  all_fields?: boolean;
  /**
   * Exclude fields that are there by default with ?exclude_fields=thumbnail
   */
  exclude_fields?: string;
  /**
   * You can specify the exact fields with ?fields=id,image
   */
  fields?: string;
  /**
   * Include fields that are not there by default with ?include_fields=image,thumbnail
   */
  include_fields?: string;
  /**
   * Return specific latents only with ?return_latents=latent_type
   */
  return_latents?: string;
};

export type ImagesRelatedListParams = {
  /**
   * Return all available fields with ?all_fields=true
   */
  all_fields?: boolean;
  /**
   * Exclude fields that are there by default with ?exclude_fields=thumbnail
   */
  exclude_fields?: string;
  /**
   * You can specify the exact fields with ?fields=id,image
   */
  fields?: string;
  /**
   * Include fields that are not there by default with ?include_fields=image,thumbnail
   */
  include_fields?: string;
  /**
   * Return specific latents only with ?return_latents=latent_type
   */
  return_latents?: string;
};

export type ImagesSimilarListParams = {
  /**
   * Return all available fields with ?all_fields=true
   */
  all_fields?: boolean;
  aspect_ratio?: number;
  aspect_ratio__gt?: number;
  aspect_ratio__gte?: number;
  aspect_ratio__lt?: number;
  aspect_ratio__lte?: number;
  aspect_ratio_fraction?: string;
  /**
   * Filter images with no aspect ratio fraction.
   */
  aspect_ratio_fraction__empty?: boolean;
  /**
   * Comma-separated list of attr:value pairs to filter by.
   */
  attributes?: string[];
  /**
   * Filter images with no coca embedding.
   */
  coca_embedding__empty?: boolean;
  /**
   * Filter images that have any of these comma-separated list of datasets.
   */
  datasets?: string[];
  /**
   * Filter images that have all of these comma-separated list of datasets.
   */
  datasets__all?: string[];
  /**
   * Filter images with no datasets.
   */
  datasets__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of datasets.
   */
  datasets__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of datasets.
   */
  datasets__ne_all?: string[];
  date_created__gt?: string;
  date_created__gte?: string;
  date_created__lt?: string;
  date_created__lte?: string;
  date_updated__gt?: string;
  date_updated__gte?: string;
  date_updated__lt?: string;
  date_updated__lte?: string;
  duplicate_state?: string;
  /**
   * Exclude fields that are there by default with ?exclude_fields=thumbnail
   */
  exclude_fields?: string;
  /**
   * You can specify the exact fields with ?fields=id,image
   */
  fields?: string;
  /**
   * Filter images that have all of these comma-separated list of attributes.
   */
  has_attributes?: string[];
  /**
   * Filter images that have all of these comma-separated list of latents.
   */
  has_latents?: string[];
  /**
   * Filter images that have all of these comma-separated list of latentmasks.
   */
  has_masks?: string[];
  /**
   * Include fields that are not there by default with ?include_fields=image,thumbnail
   */
  include_fields?: string;
  /**
   * Filter images without any of these comma-separated list of attributes.
   */
  lacks_attributes?: string[];
  /**
   * Filter images without any of these comma-separated list of latents.
   */
  lacks_latents?: string[];
  lacks_masks?: string[];
  number?: number;
  pixel_count?: number;
  pixel_count__gt?: number;
  pixel_count__gte?: number;
  pixel_count__lt?: number;
  pixel_count__lte?: number;
  /**
   * Return specific latents only with ?return_latents=latent_type
   */
  return_latents?: string;
  short_edge?: number;
  short_edge__gt?: number;
  short_edge__gte?: number;
  short_edge__lt?: number;
  short_edge__lte?: number;
  /**
   * Deprecated! Please use sources instead.
   */
  source?: string;
  /**
   * Filter images with no source.
   */
  source__empty?: boolean;
  /**
   * Comma-separated list of sources to filter by.
   */
  sources?: string[];
  /**
   * Comma-separated list of sources to exclude.
   */
  sources__ne?: string[];
  /**
   * Filter images that have any of these comma-separated list of tags.
   */
  tags?: string[];
  /**
   * Filter images that have all of these comma-separated list of tags.
   */
  tags__all?: string[];
  /**
   * Filter images with no tags.
   */
  tags__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of tags.
   */
  tags__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of tags.
   */
  tags__ne_all?: string[];
};

export type ImagesAggregateCreateParams = {
  aspect_ratio?: number;
  aspect_ratio__gt?: number;
  aspect_ratio__gte?: number;
  aspect_ratio__lt?: number;
  aspect_ratio__lte?: number;
  aspect_ratio_fraction?: string;
  /**
   * Filter images with no aspect ratio fraction.
   */
  aspect_ratio_fraction__empty?: boolean;
  /**
   * Comma-separated list of attr:value pairs to filter by.
   */
  attributes?: string[];
  /**
   * Filter images with no coca embedding.
   */
  coca_embedding__empty?: boolean;
  /**
   * Filter images that have any of these comma-separated list of datasets.
   */
  datasets?: string[];
  /**
   * Filter images that have all of these comma-separated list of datasets.
   */
  datasets__all?: string[];
  /**
   * Filter images with no datasets.
   */
  datasets__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of datasets.
   */
  datasets__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of datasets.
   */
  datasets__ne_all?: string[];
  date_created__gt?: string;
  date_created__gte?: string;
  date_created__lt?: string;
  date_created__lte?: string;
  date_updated__gt?: string;
  date_updated__gte?: string;
  date_updated__lt?: string;
  date_updated__lte?: string;
  duplicate_state?: string;
  /**
   * Filter images that have all of these comma-separated list of attributes.
   */
  has_attributes?: string[];
  /**
   * Filter images that have all of these comma-separated list of latents.
   */
  has_latents?: string[];
  /**
   * Filter images that have all of these comma-separated list of latentmasks.
   */
  has_masks?: string[];
  /**
   * Filter images without any of these comma-separated list of attributes.
   */
  lacks_attributes?: string[];
  /**
   * Filter images without any of these comma-separated list of latents.
   */
  lacks_latents?: string[];
  lacks_masks?: string[];
  pixel_count?: number;
  pixel_count__gt?: number;
  pixel_count__gte?: number;
  pixel_count__lt?: number;
  pixel_count__lte?: number;
  short_edge?: number;
  short_edge__gt?: number;
  short_edge__gte?: number;
  short_edge__lt?: number;
  short_edge__lte?: number;
  /**
   * Deprecated! Please use sources instead.
   */
  source?: string;
  /**
   * Filter images with no source.
   */
  source__empty?: boolean;
  /**
   * Comma-separated list of sources to filter by.
   */
  sources?: string[];
  /**
   * Comma-separated list of sources to exclude.
   */
  sources__ne?: string[];
  /**
   * Filter images that have any of these comma-separated list of tags.
   */
  tags?: string[];
  /**
   * Filter images that have all of these comma-separated list of tags.
   */
  tags__all?: string[];
  /**
   * Filter images with no tags.
   */
  tags__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of tags.
   */
  tags__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of tags.
   */
  tags__ne_all?: string[];
};

export type ImagesBucketCreateParams = {
  aspect_ratio?: number;
  aspect_ratio__gt?: number;
  aspect_ratio__gte?: number;
  aspect_ratio__lt?: number;
  aspect_ratio__lte?: number;
  aspect_ratio_fraction?: string;
  /**
   * Filter images with no aspect ratio fraction.
   */
  aspect_ratio_fraction__empty?: boolean;
  /**
   * Comma-separated list of attr:value pairs to filter by.
   */
  attributes?: string[];
  /**
   * Filter images with no coca embedding.
   */
  coca_embedding__empty?: boolean;
  /**
   * Filter images that have any of these comma-separated list of datasets.
   */
  datasets?: string[];
  /**
   * Filter images that have all of these comma-separated list of datasets.
   */
  datasets__all?: string[];
  /**
   * Filter images with no datasets.
   */
  datasets__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of datasets.
   */
  datasets__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of datasets.
   */
  datasets__ne_all?: string[];
  date_created__gt?: string;
  date_created__gte?: string;
  date_created__lt?: string;
  date_created__lte?: string;
  date_updated__gt?: string;
  date_updated__gte?: string;
  date_updated__lt?: string;
  date_updated__lte?: string;
  duplicate_state?: string;
  /**
   * Filter images that have all of these comma-separated list of attributes.
   */
  has_attributes?: string[];
  /**
   * Filter images that have all of these comma-separated list of latents.
   */
  has_latents?: string[];
  /**
   * Filter images that have all of these comma-separated list of latentmasks.
   */
  has_masks?: string[];
  /**
   * Filter images without any of these comma-separated list of attributes.
   */
  lacks_attributes?: string[];
  /**
   * Filter images without any of these comma-separated list of latents.
   */
  lacks_latents?: string[];
  lacks_masks?: string[];
  pixel_count?: number;
  pixel_count__gt?: number;
  pixel_count__gte?: number;
  pixel_count__lt?: number;
  pixel_count__lte?: number;
  short_edge?: number;
  short_edge__gt?: number;
  short_edge__gte?: number;
  short_edge__lt?: number;
  short_edge__lte?: number;
  /**
   * Deprecated! Please use sources instead.
   */
  source?: string;
  /**
   * Filter images with no source.
   */
  source__empty?: boolean;
  /**
   * Comma-separated list of sources to filter by.
   */
  sources?: string[];
  /**
   * Comma-separated list of sources to exclude.
   */
  sources__ne?: string[];
  /**
   * Filter images that have any of these comma-separated list of tags.
   */
  tags?: string[];
  /**
   * Filter images that have all of these comma-separated list of tags.
   */
  tags__all?: string[];
  /**
   * Filter images with no tags.
   */
  tags__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of tags.
   */
  tags__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of tags.
   */
  tags__ne_all?: string[];
};

export type ImagesCountRetrieveParams = {
  aspect_ratio?: number;
  aspect_ratio__gt?: number;
  aspect_ratio__gte?: number;
  aspect_ratio__lt?: number;
  aspect_ratio__lte?: number;
  aspect_ratio_fraction?: string;
  /**
   * Filter images with no aspect ratio fraction.
   */
  aspect_ratio_fraction__empty?: boolean;
  /**
   * Comma-separated list of attr:value pairs to filter by.
   */
  attributes?: string[];
  /**
   * Filter images with no coca embedding.
   */
  coca_embedding__empty?: boolean;
  /**
   * Filter images that have any of these comma-separated list of datasets.
   */
  datasets?: string[];
  /**
   * Filter images that have all of these comma-separated list of datasets.
   */
  datasets__all?: string[];
  /**
   * Filter images with no datasets.
   */
  datasets__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of datasets.
   */
  datasets__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of datasets.
   */
  datasets__ne_all?: string[];
  date_created__gt?: string;
  date_created__gte?: string;
  date_created__lt?: string;
  date_created__lte?: string;
  date_updated__gt?: string;
  date_updated__gte?: string;
  date_updated__lt?: string;
  date_updated__lte?: string;
  duplicate_state?: string;
  /**
   * Filter images that have all of these comma-separated list of attributes.
   */
  has_attributes?: string[];
  /**
   * Filter images that have all of these comma-separated list of latents.
   */
  has_latents?: string[];
  /**
   * Filter images that have all of these comma-separated list of latentmasks.
   */
  has_masks?: string[];
  /**
   * Filter images without any of these comma-separated list of attributes.
   */
  lacks_attributes?: string[];
  /**
   * Filter images without any of these comma-separated list of latents.
   */
  lacks_latents?: string[];
  lacks_masks?: string[];
  pixel_count?: number;
  pixel_count__gt?: number;
  pixel_count__gte?: number;
  pixel_count__lt?: number;
  pixel_count__lte?: number;
  short_edge?: number;
  short_edge__gt?: number;
  short_edge__gte?: number;
  short_edge__lt?: number;
  short_edge__lte?: number;
  /**
   * Deprecated! Please use sources instead.
   */
  source?: string;
  /**
   * Filter images with no source.
   */
  source__empty?: boolean;
  /**
   * Comma-separated list of sources to filter by.
   */
  sources?: string[];
  /**
   * Comma-separated list of sources to exclude.
   */
  sources__ne?: string[];
  /**
   * Filter images that have any of these comma-separated list of tags.
   */
  tags?: string[];
  /**
   * Filter images that have all of these comma-separated list of tags.
   */
  tags__all?: string[];
  /**
   * Filter images with no tags.
   */
  tags__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of tags.
   */
  tags__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of tags.
   */
  tags__ne_all?: string[];
};

export type ImagesRandomRetrieveParams = {
  /**
   * Return all available fields with ?all_fields=true
   */
  all_fields?: boolean;
  aspect_ratio?: number;
  aspect_ratio__gt?: number;
  aspect_ratio__gte?: number;
  aspect_ratio__lt?: number;
  aspect_ratio__lte?: number;
  aspect_ratio_fraction?: string;
  /**
   * Filter images with no aspect ratio fraction.
   */
  aspect_ratio_fraction__empty?: boolean;
  /**
   * Comma-separated list of attr:value pairs to filter by.
   */
  attributes?: string[];
  /**
   * Filter images with no coca embedding.
   */
  coca_embedding__empty?: boolean;
  /**
   * Filter images that have any of these comma-separated list of datasets.
   */
  datasets?: string[];
  /**
   * Filter images that have all of these comma-separated list of datasets.
   */
  datasets__all?: string[];
  /**
   * Filter images with no datasets.
   */
  datasets__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of datasets.
   */
  datasets__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of datasets.
   */
  datasets__ne_all?: string[];
  date_created__gt?: string;
  date_created__gte?: string;
  date_created__lt?: string;
  date_created__lte?: string;
  date_updated__gt?: string;
  date_updated__gte?: string;
  date_updated__lt?: string;
  date_updated__lte?: string;
  duplicate_state?: string;
  /**
   * Exclude fields that are there by default with ?exclude_fields=thumbnail
   */
  exclude_fields?: string;
  /**
   * You can specify the exact fields with ?fields=id,image
   */
  fields?: string;
  /**
   * Filter images that have all of these comma-separated list of attributes.
   */
  has_attributes?: string[];
  /**
   * Filter images that have all of these comma-separated list of latents.
   */
  has_latents?: string[];
  /**
   * Filter images that have all of these comma-separated list of latentmasks.
   */
  has_masks?: string[];
  /**
   * Include fields that are not there by default with ?include_fields=image,thumbnail
   */
  include_fields?: string;
  /**
   * Filter images without any of these comma-separated list of attributes.
   */
  lacks_attributes?: string[];
  /**
   * Filter images without any of these comma-separated list of latents.
   */
  lacks_latents?: string[];
  lacks_masks?: string[];
  /**
   * Filter image_hash by a number of random prefixes. A higher num_prefixes will give you more samples, but slow down the query.
   */
  num_prefixes?: number;
  /**
   * The number of images to return per page.
   */
  page_size?: number;
  pixel_count?: number;
  pixel_count__gt?: number;
  pixel_count__gte?: number;
  pixel_count__lt?: number;
  pixel_count__lte?: number;
  /**
   * Filter image_hash by a number of random prefixes. A smaller prefix_length will give you more samples, but less random.
   */
  prefix_length?: number;
  /**
   * Return specific latents only with ?return_latents=latent_type
   */
  return_latents?: string;
  short_edge?: number;
  short_edge__gt?: number;
  short_edge__gte?: number;
  short_edge__lt?: number;
  short_edge__lte?: number;
  /**
   * Deprecated! Please use sources instead.
   */
  source?: string;
  /**
   * Filter images with no source.
   */
  source__empty?: boolean;
  /**
   * Comma-separated list of sources to filter by.
   */
  sources?: string[];
  /**
   * Comma-separated list of sources to exclude.
   */
  sources__ne?: string[];
  /**
   * Filter images that have any of these comma-separated list of tags.
   */
  tags?: string[];
  /**
   * Filter images that have all of these comma-separated list of tags.
   */
  tags__all?: string[];
  /**
   * Filter images with no tags.
   */
  tags__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of tags.
   */
  tags__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of tags.
   */
  tags__ne_all?: string[];
};

export type ImagesSimilarToFileCreateParams = {
  /**
   * Return all available fields with ?all_fields=true
   */
  all_fields?: boolean;
  /**
   * Exclude fields that are there by default with ?exclude_fields=thumbnail
   */
  exclude_fields?: string;
  /**
   * You can specify the exact fields with ?fields=id,image
   */
  fields?: string;
  /**
   * Include fields that are not there by default with ?include_fields=image,thumbnail
   */
  include_fields?: string;
  /**
   * Return specific latents only with ?return_latents=latent_type
   */
  return_latents?: string;
};

export type ImagesSimilarToFileCreateBody = {
  image: Blob;
  /** JSON string containing parameters like "number" */
  json?: string;
};

export type ImagesSimilarToTextCreateParams = {
  /**
   * Return all available fields with ?all_fields=true
   */
  all_fields?: boolean;
  aspect_ratio?: number;
  aspect_ratio__gt?: number;
  aspect_ratio__gte?: number;
  aspect_ratio__lt?: number;
  aspect_ratio__lte?: number;
  aspect_ratio_fraction?: string;
  /**
   * Filter images with no aspect ratio fraction.
   */
  aspect_ratio_fraction__empty?: boolean;
  /**
   * Comma-separated list of attr:value pairs to filter by.
   */
  attributes?: string[];
  /**
   * Filter images with no coca embedding.
   */
  coca_embedding__empty?: boolean;
  /**
   * Filter images that have any of these comma-separated list of datasets.
   */
  datasets?: string[];
  /**
   * Filter images that have all of these comma-separated list of datasets.
   */
  datasets__all?: string[];
  /**
   * Filter images with no datasets.
   */
  datasets__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of datasets.
   */
  datasets__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of datasets.
   */
  datasets__ne_all?: string[];
  date_created__gt?: string;
  date_created__gte?: string;
  date_created__lt?: string;
  date_created__lte?: string;
  date_updated__gt?: string;
  date_updated__gte?: string;
  date_updated__lt?: string;
  date_updated__lte?: string;
  duplicate_state?: string;
  /**
   * Exclude fields that are there by default with ?exclude_fields=thumbnail
   */
  exclude_fields?: string;
  /**
   * You can specify the exact fields with ?fields=id,image
   */
  fields?: string;
  /**
   * Filter images that have all of these comma-separated list of attributes.
   */
  has_attributes?: string[];
  /**
   * Filter images that have all of these comma-separated list of latents.
   */
  has_latents?: string[];
  /**
   * Filter images that have all of these comma-separated list of latentmasks.
   */
  has_masks?: string[];
  /**
   * Include fields that are not there by default with ?include_fields=image,thumbnail
   */
  include_fields?: string;
  /**
   * Filter images without any of these comma-separated list of attributes.
   */
  lacks_attributes?: string[];
  /**
   * Filter images without any of these comma-separated list of latents.
   */
  lacks_latents?: string[];
  lacks_masks?: string[];
  pixel_count?: number;
  pixel_count__gt?: number;
  pixel_count__gte?: number;
  pixel_count__lt?: number;
  pixel_count__lte?: number;
  /**
   * Return specific latents only with ?return_latents=latent_type
   */
  return_latents?: string;
  short_edge?: number;
  short_edge__gt?: number;
  short_edge__gte?: number;
  short_edge__lt?: number;
  short_edge__lte?: number;
  /**
   * Deprecated! Please use sources instead.
   */
  source?: string;
  /**
   * Filter images with no source.
   */
  source__empty?: boolean;
  /**
   * Comma-separated list of sources to filter by.
   */
  sources?: string[];
  /**
   * Comma-separated list of sources to exclude.
   */
  sources__ne?: string[];
  /**
   * Filter images that have any of these comma-separated list of tags.
   */
  tags?: string[];
  /**
   * Filter images that have all of these comma-separated list of tags.
   */
  tags__all?: string[];
  /**
   * Filter images with no tags.
   */
  tags__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of tags.
   */
  tags__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of tags.
   */
  tags__ne_all?: string[];
};

export type ImagesSimilarToVectorCreateParams = {
  /**
   * Return all available fields with ?all_fields=true
   */
  all_fields?: boolean;
  aspect_ratio?: number;
  aspect_ratio__gt?: number;
  aspect_ratio__gte?: number;
  aspect_ratio__lt?: number;
  aspect_ratio__lte?: number;
  aspect_ratio_fraction?: string;
  /**
   * Filter images with no aspect ratio fraction.
   */
  aspect_ratio_fraction__empty?: boolean;
  /**
   * Comma-separated list of attr:value pairs to filter by.
   */
  attributes?: string[];
  /**
   * Filter images with no coca embedding.
   */
  coca_embedding__empty?: boolean;
  /**
   * Filter images that have any of these comma-separated list of datasets.
   */
  datasets?: string[];
  /**
   * Filter images that have all of these comma-separated list of datasets.
   */
  datasets__all?: string[];
  /**
   * Filter images with no datasets.
   */
  datasets__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of datasets.
   */
  datasets__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of datasets.
   */
  datasets__ne_all?: string[];
  date_created__gt?: string;
  date_created__gte?: string;
  date_created__lt?: string;
  date_created__lte?: string;
  date_updated__gt?: string;
  date_updated__gte?: string;
  date_updated__lt?: string;
  date_updated__lte?: string;
  duplicate_state?: string;
  /**
   * Exclude fields that are there by default with ?exclude_fields=thumbnail
   */
  exclude_fields?: string;
  /**
   * You can specify the exact fields with ?fields=id,image
   */
  fields?: string;
  /**
   * Filter images that have all of these comma-separated list of attributes.
   */
  has_attributes?: string[];
  /**
   * Filter images that have all of these comma-separated list of latents.
   */
  has_latents?: string[];
  /**
   * Filter images that have all of these comma-separated list of latentmasks.
   */
  has_masks?: string[];
  /**
   * Include fields that are not there by default with ?include_fields=image,thumbnail
   */
  include_fields?: string;
  /**
   * Filter images without any of these comma-separated list of attributes.
   */
  lacks_attributes?: string[];
  /**
   * Filter images without any of these comma-separated list of latents.
   */
  lacks_latents?: string[];
  lacks_masks?: string[];
  pixel_count?: number;
  pixel_count__gt?: number;
  pixel_count__gte?: number;
  pixel_count__lt?: number;
  pixel_count__lte?: number;
  /**
   * Return specific latents only with ?return_latents=latent_type
   */
  return_latents?: string;
  short_edge?: number;
  short_edge__gt?: number;
  short_edge__gte?: number;
  short_edge__lt?: number;
  short_edge__lte?: number;
  /**
   * Deprecated! Please use sources instead.
   */
  source?: string;
  /**
   * Filter images with no source.
   */
  source__empty?: boolean;
  /**
   * Comma-separated list of sources to filter by.
   */
  sources?: string[];
  /**
   * Comma-separated list of sources to exclude.
   */
  sources__ne?: string[];
  /**
   * Filter images that have any of these comma-separated list of tags.
   */
  tags?: string[];
  /**
   * Filter images that have all of these comma-separated list of tags.
   */
  tags__all?: string[];
  /**
   * Filter images with no tags.
   */
  tags__empty?: boolean;
  /**
   * Filter images that do not have any of these comma-separated list of tags.
   */
  tags__ne?: string[];
  /**
   * Filter images that do not have all of these comma-separated list of tags.
   */
  tags__ne_all?: string[];
};

export type StatsImageAspectRatioFractionsRetrieve200 = {
  [key: string]: number;
};

export type StatsImageSourcesRetrieve200 = { [key: string]: number };

export type TagsListParams = {
  /**
   * The pagination cursor value.
   */
  cursor?: string;
  /**
   * Number of results to return per page.
   */
  page_size?: number;
};

export type TokensListParams = {
  /**
   * The pagination cursor value.
   */
  cursor?: string;
  /**
   * Number of results to return per page.
   */
  page_size?: number;
};
